// This file is part of coursework 2 for COMP1212
// which follows the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// Written by Sam Wilson


/**
 * The ALU. Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs,
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * The bit-combinations that yield each function are
 * documented in the book. In addition, the ALU
 * computes two 1-bit outputs: if the ALU output
 * is 0, zr is set to 1; otherwise zr is set to 0;
 * If out<0, ng is set to 1; otherwise ng is set to 0.
 */

CHIP ALU {
    IN x[16], y[16], zx, nx, zy, ny, f, no;
    OUT out[16], zr, ng;

    PARTS:
	    Mux16(x[0..15]=x, y[0..15]=false, sel=zx, out[0..15]=zxoutputx);
	    Not16(in[0..15]=zxoutputx, out[0..15]=notx);
	    Mux16(x[0..15]=zxoutputx, y[0..15]=notx, sel=nx, out[0..15]=nxoutputx);

	    Mux16(x[0..15]=y, y[0..15]=false, sel=zy, out[0..15]=zyoutputy);
	    Not16(in[0..15]=zyoutputy, out[0..15]=noty);
	    Mux16(x[0..15]=zyoutputy, y[0..15]=noty, sel=ny, out[0..15]=nyoutputy);

	    Add16(x[0..15]=nxoutputx, y[0..15]=nyoutputy, out[0..15]=xplusy);
	    And16(x[0..15]=nxoutputx, y[0..15]=nyoutputy, out[0..15]=xandy);
	    Mux16(x[0..15]=xandy, y[0..15]=xplusy, sel=f, out[0..15]=fout);

	    Not16(in[0..15]=fout, out[0..15]=notfout);

	    // Output 'out'
	    Mux16(x[0..15]=fout, y[0..15]=notfout, sel=no, out[0..7]=lowfinalout, out[8..15]=highfinalout, out[15]=ng, out=out);
	    
	    // Now set the zr and ng outputs
	    Or8Way(in[0..7]=lowfinalout, out=lowout);
	    Or8Way(in[0..7]=highfinalout, out=highout);

	    // if lowout=0 and highout=0, zr = 1, else zr = 0

	    Or(x=lowout, y=highout, out=xyorout);
	    Not(in=xyorout, out=zr);
}
